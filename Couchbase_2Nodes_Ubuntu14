#!/bin/bash
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
echo "deb http://download.mono-project.com/repo/debian wheezy main" | sudo tee /etc/apt/sources.list.d/mono-xamarin.list
sudo apt-get update
sudo apt-get install mono-complete wget -y
sudo useradd -m octopus
echo octopus:Password1 | sudo chpasswd
sudo sed -i.bak -e s/'PasswordAuthentication no'/'PasswordAuthentication yes'/g /etc/ssh/sshd_config
sudo restart ssh

sudo apt-get install libssl0.9.8
curl -O http://packages.couchbase.com/releases/couchbase-release/couchbase-release-1.0-1-amd64.deb   
sudo dpkg -i couchbase-release-1.0-1-amd64.deb
sudo apt-get update
sudo apt-get install couchbase-server -y
sudo apt-get install jq -y

sudo apt-get install libwww-perl libdatetime-perl wget unzip -y
cd /opt/
sudo wget http://aws-cloudwatch.s3.amazonaws.com/downloads/CloudWatchMonitoringScripts-1.2.1.zip
sudo unzip CloudWatchMonitoringScripts-1.2.1.zip
sudo rm CloudWatchMonitoringScripts-1.2.1.zip
cd aws-scripts-mon
sudo touch /etc/cron.d/cloudwatch-monitor
sudo chmod 7777 /etc/cron.d/cloudwatch-monitor
sudo echo "*/1 * * * * root /opt/aws-scripts-mon/mon-put-instance-data.pl --disk-space-avail --disk-path=/ --disk-path=/var --from-cron" > /etc/cron.d/cloudwatch-monitor
sudo chmod 0644 /etc/cron.d/cloudwatch-monitor
sudo /etc/init.d/cron restart

sudo apt-get update -y
REGION=$(wget -q -O - http://169.254.169.254/latest/dynamic/instance-identity/document|grep region|awk -F\" '{print $4}')
sudo curl https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -O
sudo chmod +x ./awslogs-agent-setup.py
sudo apt-get install python2.7 -y
sudo apt-get install python-pip -y
sudo python ./awslogs-agent-setup.py --region $REGION --non-interactive --configfile "https://raw.githubusercontent.com/BrokenFlame/AWS/master/CloudLog/BasicConfig"
sudo chkconfig awslogs on
sudo service awslogs start
sudo update-rc.d awslogs defaults
sudo pip install awscli

REGION=$(wget -q -O - http://169.254.169.254/latest/dynamic/instance-identity/document|grep region|awk -F\" '{print $4}')
RESERVATIONS=$(aws ec2 describe-instances --filters "Name=tag:role,Values=couchbase" "Name=instance-state-code,Values=16" --region $REGION | jq "[.Reservations[] | {instance: .Instances[].PrivateIpAddress}] | length")
LOCALIP=$(wget -q -O - http://169.254.169.254/latest/meta-data/local-ipv4)
INSTANCEID=$(wget -q -O - http://169.254.169.254/latest/meta-data/instance-id)

if [[ "$RESERVATIONS" = "1" ]]; then 
/opt/couchbase/bin/couchbase-cli cluster-init --cluster-username=Administrator --cluster-password=Protect\$1 --cluster-port=8091  --cluster-ramsize=3072 --cluster-index-ramsize=1024  --services=data,index,query;
/opt/couchbase/bin/couchbase-cli rebalance -c 127.0.0.1:8091 -u Administrator -p Protect\$1;
/opt/couchbase/bin/couchbase-cli bucket-create -c 127.0.0.1:8091 --bucket=offer_catalogue --bucket-type=couchbase --bucket-port=11222 --bucket-ramsize=1024 --bucket-replica=1 --bucket-priority=low --wait -u Administrator -p Protect\$1;
/opt/couchbase/bin/couchbase-cli setting-autofailover -c 127.0.0.1:8091 -u Administrator -p Protect\$1 --auto-failover-timeout=120  --enable-auto-failover=1
elif [[ "$RESERVATIONS" = "2" ]]; then
VPCID=$(aws ec2 describe-instances --filters "Name=tag:role,Values=couchbase" "Name=instance-state-code,Values=16" --region $REGION | jq "[.Reservations[] | {InstanceId: .Instances[].InstanceId, VpcId: .Instances[].VpcId}] | .[] | select( .InstanceId == \"$INSTANCEID\" )  | .VpcId" --raw-output);
PRIMARYIP=$(aws ec2 describe-instances --filters "Name=tag:role,Values=couchbase" "Name=instance-state-code,Values=16" --region $REGION | jq "[.Reservations[] | {instance: .Instances[].PrivateIpAddress, vpcId: .Instances[].VpcId}] | .[] | select( .VpcId = \"$VPCID\" ) | . |select(.instance != \"$LOCALIP\") | .instance" --raw-output);
/opt/couchbase/bin/couchbase-cli cluster-init --cluster-username=Administrator --cluster-password=Protect\$1 --cluster-port=8091  --cluster-ramsize=3072 --cluster-index-ramsize=1024  --services=data,index,query;
/opt/couchbase/bin/couchbase-cli rebalance -c $PRIMARYIP:8091 -u Administrator -p Protect\$1 --server-add=$LOCALIP:8091 --server-add-username=Administrator --server-add-password=Protect\$1
fi


